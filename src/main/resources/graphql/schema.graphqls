type Query {
    ping: String!
    users: [UserPayload!]!
    user(id: Int!): UserPayload
    loginUser(input: LoginUserInput!): String!
    products: [ProductPayload!]!
    product(id: Int!): ProductPayload
    order(id: Int!): OrderPayload
    orders: [OrderPayload!]!
    ordersByUserId(id: Int!): [OrderPayload!]!
    productsByOrderId(id: Int!): [ProductPayload!]!
}

type Mutation {
    createUser(input: CreateUserInput!): UserPayload!
    updateUser(input: UpdateUserInput!): UserPayload!
    deleteUser(id: Int!): GenericMessage!
    createProduct(input: CreateProductInput!): ProductPayload!
    updateProduct(input: UpdateProductInput!): ProductPayload!
    deleteProduct(input: Int!): GenericMessage!
    createOrder(input: CreateOrderInput!): OrderPayload!
    updateOrder(input: UpdateOrderInput!): OrderPayload!
    deleteOrder(id: Int!): GenericMessage!
}

type GenericMessage{
    message: String!
}

type User {
    id: ID!
    name: String!
    role: Role!
    email: String!
    password: String!
}

type Product {
    id: ID!
    name: String!
    stock: Int!
    price: Float!
}

type ProductLine {
    id: ID!
    product: Product!
    quantity: Int!
}

type Order {
    id: ID!
    products: [ProductLine!]!
    users: User!
}

input CreateUserInput{
    name: String!
    email: String!
    role: Role!
    password: String!
}

input LoginUserInput{
    email: String!
    password: String!
}

input UpdateUserInput{
    id: ID!
    name: String!
    email: String!
}
input CreateProductInput{
    name: String!
    stock: Int!
    price: Float!
}

input CreateOrderInput{
    userId: ID!
    items: [OrderItemInput!]!
}

input UpdateOrderInput{
    userId: ID!
    id: ID!
    items: [OrderItemInput!]!
}

input OrderItemInput{
    productId: ID!
    quantity: Int!
}

input UpdateProductInput{
    id: ID!
    name: String
    stock: Int
    price: Float
}

type UserPayload{
    id: ID!
    name: String!
    email: String!
    role: Role!
}

type ProductPayload{
    id: ID!
    name: String!
    stock: Int!
    price: Float!
}

type OrderPayload{
    id: ID!
    products: [ProductLine!]
    user: User!
}

enum Role {
    NORMAL
    ADMIN
}